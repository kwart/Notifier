<!DOCTYPE html PUBLIC "-//IETF//DTD HTML//EN">
<!-- saved from url=(0075)http://download.oracle.com/javase/1.4.2/docs/guide/swing/1.4/w2k_props.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
<title>Windows Desktop Property Support</title>
<meta name="collection" content="reference">
</head>

<body bgcolor="white">

<h1>Windows Desktop Property Support</h1>

<p>This feature involves two areas:</p>

<ul>
 <li><a href="http://download.oracle.com/javase/1.4.2/docs/guide/swing/1.4/w2k_props.html#more">Honor More User Preferences</a>
 <ul>
  <li><a href="http://download.oracle.com/javase/1.4.2/docs/guide/swing/1.4/w2k_props.html#color">Color Properties</a>
  </li><li><a href="http://download.oracle.com/javase/1.4.2/docs/guide/swing/1.4/w2k_props.html#geometry">Geometry Properties</a>
  </li><li><a href="http://download.oracle.com/javase/1.4.2/docs/guide/swing/1.4/w2k_props.html#font">Font Properties</a>
  </li><li><a href="http://download.oracle.com/javase/1.4.2/docs/guide/swing/1.4/w2k_props.html#effect">Visual Effect Properties</a>
  </li><li><a href="http://download.oracle.com/javase/1.4.2/docs/guide/swing/1.4/w2k_props.html#audio">Audio Feedback Properties</a>
  </li><li><a href="http://download.oracle.com/javase/1.4.2/docs/guide/swing/1.4/w2k_props.html#input">Input Properties</a>
 </li></ul>
 </li><li><a href="http://download.oracle.com/javase/1.4.2/docs/guide/swing/1.4/w2k_props.html#dynamic">Respond to Dynamic Changes</a>
</li></ul>

<h2><a name="more">Honor More User Preferences</a></h2>

<p>On the Windows platform, users may customize their GUIs via
the"Properties" option off the
desktop's popup menu. In order to ensure the Swing Windows Look and Feel
properly implements the user's visual and behavioral preferences,
it must obtain the values of these UI properties from the system
registry. The values for these properties will be retrievable from the
<code>getDesktopProperty()</code> method on
<a href="http://download.oracle.com/javase/1.4.2/docs/api/java/awt/Toolkit.html">java.awt.Toolkit</a>.

</p><p>Most of the properties accessible via this method are specific
to the Windows platform and hence have a "win." prefix.
The list of supported Windows property names can be obtained
programmaticallyby querying the "win.propNames" property:

</p><pre>     String propnames[] = (String[])Toolkit.getDefaultToolkit().getDesktopProperty("win.propNames");
     System.out.println("Supported windows property names:");
         for(int i = 0; i &lt; propnames.length; i++) {
             System.out.println(propnames[i]);
         }
</pre>

<p>Properties which are supported on all platforms begin with an
"awt." prefix.

</p><p>Programs do not need to access these properties directly; the Windows look
and feel will automatically read and interpret these properties to provide
proper visuals and behavior for the components.

</p><h3><a name="color">Color Properties</a></h3>

<table summary="color properties" border="1">
 <tbody><tr>
  <th> <p align="center"><b>User Preference</b> </p></th>
  <th> <p align="center"><b>Java Property Name</b> </p></th>
  <th> <p align="center"><b>Type</b> </p></th>
 </tr>
 <tr>
  <td> 3D Object Background </td>
  <td> "win.3d.backgroundColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> 3D Object Highlight </td>
  <td> "win.3d.highlightColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> 3D Object Light Highlight </td>
  <td> "win.3d.lightColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> 3D Object Shadow </td>
  <td> "win.3d.shadowColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Active Title Bar color1 </td>
  <td> "win.frame.activeCaptionColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Active Title Bar color2 </td>
  <td> "win.frame.activeCaptionGradientColor"(TBI) </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Active Title Bar font color </td>
  <td> "win.frame.captionTextColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Active Window Border color </td>
  <td> "win.frame.activeBorderColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Application Background color </td>
  <td> "win.mdi.backgroundColor" </td>
  <td> java.lang.Color </td>
 </tr>
 <tr>
  <td> Desktop color </td>
  <td> "win.desktop.backgroundColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Inactive Title Bar color1 </td>
  <td> "win.frame.inactiveCaptionColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Inactive Title Bar color2 </td>
  <td> "win.frame.inactiveCaptionGradientColor"(TBI) </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Inactive Title Bar font color </td>
  <td> "win.frame.inactiveCaptionTextColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Inactive Window Border color </td>
  <td> "win.frame.inactiveBorderColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Menu color </td>
  <td> "win.menu.backgroundColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Menu font color </td>
  <td> "win.menu.textColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Message Box font color </td>
  <td> "win.frame.textColor?????" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Selected Items color </td>
  <td> "win.item.highlightColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Selected Items font color </td>
  <td> "win.item.highlightTextColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> ToolTip color </td>
  <td> "win.tooltip.backgroundColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> ToolTip font color </td>
  <td> "win.tooltip.textColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Window color </td>
  <td> "win.frame.backgroundColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Window font color </td>
  <td> "win.frame.textColor" </td>
  <td> java.awt.Color </td>
 </tr>
 <tr>
  <td> Hot tracking color </td>
  <td> "win.item.hotTrackedColor" </td>
  <td> java.awt.Color </td>
 </tr>
</tbody></table>

<h3><a name="geometry">Geometry Properties</a></h3>

<table summary="geometry properties" border="1">
 <tbody><tr>
  <th> <p align="center"><b>User Preference</b> </p></th>
  <th> <p align="center"><b>Java Property Name</b> </p></th>
  <th> <p align="center"><b>Type</b> </p></th>
 </tr>
 <tr>
  <td> Active Title Bar size </td>
  <td> "win.frame.captionHeight" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Active Window Border size </td>
  <td> "win.frame.sizingBorderWidth" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Caption Buttons size </td>
  <td> "win.frame.captionButtonHeight"<br>
       "win.frame.captionButtonWidth"<br>
       win.frame.captionHeight" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Icon size </td>
  <td> "win.icon.hspacing"<br>
       "win.icon.vspacing"??? </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Icon horizontal spacing </td>
  <td> "win.icon.hspacing" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Icon vertical spacing </td>
  <td> "win.icon.vspacing" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Inactive Title Bar size </td>
  <td> "win.frame.captionButtonHeight"<br>
       "win.frame.captionButtonWidth"<br>
       "win.frame.captionHeight" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Inactive Window Border size </td>
  <td> "win.frame.sizingBorderWidth" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Menu font size </td>
  <td> "win.menu.font"<br>
       "win.menu.height" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Menu Size </td>
  <td> "win.menu.height"<br>
       "win.menu.buttonWidth" </td>
  <td> java.awt.Integer </td>
 </tr>
 <tr>
  <td> Palette Title size </td>
  <td> "win.frame.smallCaptionHeight"<br>
       "win.frame.smallCaptionButtonHeight"<br>
       "win.frame.smallCaptionButtonWidth" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Scrollbar width </td>
  <td> "win.scrollbar.width" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Scrollbar height </td>
  <td> "win.scrollbar.height" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Selected Items size </td>
  <td> "win.menu.height"<br>
       "win.menu.buttonWidth" </td>
  <td> java.lang.Integer </td>
 </tr>
</tbody></table>

<h3><a name="font">Font Properties</a></h3>

<table summary="font properties" border="1">
 <tbody><tr>
  <th> <p align="center"><b>User Preference</b> </p></th>
  <th> <p align="center"><b>Java Property Name</b> </p></th>
  <th> <p align="center"><b>Type</b> </p></th>
 </tr>
 <tr>
  <td> Active Title Bar font </td>
  <td> "win.frame.captionFont" </td>
  <td> java.awt.Font </td>
 </tr>
 <tr>
  <td> Icon font </td>
  <td> "win.icon.font" </td>
  <td> java.awt.Font </td>
 </tr>
 <tr>
  <td> Inactive Title Bar font </td>
  <td> "win.frame.captionFont" </td>
  <td> java.awt.Font </td>
 </tr>
 <tr>
  <td> Menu font </td>
  <td> "win.menu.font" </td>
  <td> java.awt.Font </td>
 </tr>
 <tr>
  <td> Message Box font </td>
  <td> "win.messagebox.font" </td>
  <td> java.awt.Font </td>
 </tr>
 <tr>
  <td> Palette Title font </td>
  <td> "win.frame.smallCaptionFont" </td>
  <td> java.awt.Font </td>
 </tr>
 <tr>
  <td> Selected Items font </td>
  <td> "win.menu.font" </td>
  <td> java.awt.Font </td>
 </tr>
 <tr>
  <td> ToolTip font </td>
  <td> "win.tooltip.font" </td>
  <td> java.awt.Font </td>
 </tr>
</tbody></table>

<h4>Font Compatibility</h4>

<p>Now Swing programs running
in the Windows look and feel will render with the system font set by the user
instead of a Java-defined font. Since this may cause compatibility problems for
programs which depend on the old behavior (because of geometry issues,
localization dependencies on particular font glyphs, etc.), a runtime property
has been provided to allow this feature to be turned off as necessary:

</p><pre>     java <b>-Dswing.useSystemFontSettings=false</b> MyJavaProgram
</pre>

<h3><a name="effect">Visual Effect Properties</a></h3>

<table summary="visual effect properties" border="1">
 <tbody><tr>
  <th> <p align="center"><b>User Preference</b> </p></th>
  <th> <p align="center"><b>Java Property Name</b> </p></th>
  <th> <p align="center"><b>Type</b> </p></th>
 </tr>
 <tr>
  <td> Icon title wrapping </td>
  <td> "win.icon.titleWrappingOn" </td>
  <td> java.lang.Boolean </td>
 </tr>
 <tr>
  <td> Window Drag effects </td>
  <td> "win.frame.fullWindowDragOn" </td>
  <td> java.lang.Boolean </td>
 </tr>
 <tr>
  <td> Keyboard Navigation Display </td>
  <td> "win.menu.keyboardCuesOn"(TBI) </td>
  <td> java.lang.Boolean </td>
 </tr>
 <tr>
  <td> Hot tracking on toolbars/menubars </td>
  <td> "win.item.hotTrackingOn" </td>
  <td> java.lang.Boolean </td>
 </tr>
 <tr>
  <td> Title Bar Gradients </td>
  <td> "win.frame.captionGradientsOn" </td>
  <td> java.lang.Boolean </td>
 </tr>
</tbody></table>

<h3><a name="audio">Audio-feedback Properties</a></h3>

<table summary="audio-feedback properties" border="1">
 <tbody><tr>
  <th> <p align="center"><b>User Preference</b> </p></th>
  <th> <p align="center"><b>Java Property Name</b> </p></th>
  <th> <p align="center"><b>Type</b> </p></th>
 </tr>
 <tr>
  <td> Default sound </td>
  <td> "win.sound.default" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> Close sound </td>
  <td> "win.sound.close" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> Maximize sound </td>
  <td> "win.sound.maximize" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> Minimize sound </td>
  <td> "win.sound.minimize" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> Menu Command sound </td>
  <td> "win.sound.menuCommand" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> Menu Popup sound </td>
  <td> "win.sound.menuPopup" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> Open sound </td>
  <td> "win.sound.open" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> Restore Down sound </td>
  <td> "win.sound.restoreDown" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> Restore Up sound </td>
  <td> "win.sound.restoreUp" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> System Asterisk sound </td>
  <td> "win.sound.asterisk" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> System Exclamation sound </td>
  <td> "win.sound.exclamation" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> System Exit sound </td>
  <td> "win.sound.exit" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> System Hand sound </td>
  <td> "win.sound.hand" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> System Question sound </td>
  <td> "win.sound.question" </td>
  <td> java.lang.Runnable </td>
 </tr>
 <tr>
  <td> System Start sound </td>
  <td> "win.sound.start" </td>
  <td> java.lang.Runnable </td>
 </tr>
</tbody></table>

<h4>Dynamic Changes to Sounds</h4>

<p>Note that the object returned for a sound property is simply a 
<code>Runnable</code> that plays the current audio clip for that property.
This means that there is no need for watching for dynamic changes to
sound properties because the sound's property value is a live link
to the current sound setting.

</p><h3><a name="input">Input Properties</a></h3>

<table summary="input properties" border="1">
 <tbody><tr>
  <th>
  <p align="center"><b>User Preference</b> </p></th>
  <th> <p align="center"><b>Java Property Name</b> </p></th>
  <th> <p align="center"><b>Type</b> </p></th>
 </tr>
 <tr>
  <td> Double click interval </td>
  <td> "awt.multiClickInterval" </td>
  <td> java.lang.Integer </td>
 </tr>
 <tr>
  <td> Cursor blink rate </td>
  <td> "awt.cursorBlinkRate"(TBI) </td>
  <td> java.lang.Integer </td>
 </tr>
</tbody></table>

<h2><a name="dynamic">Respond to Dynamic Changes</a></h2>

<p>In JDK 1.3, AWT added the ability to register
for notification when one of these desktop property values changes. This is
supported via the <code>addPropertyChangeListener()</code>
method on <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/awt/Toolkit.html">java.awt.Toolkit</a>. Swing's
Windows Look and Feel will use this mechanism to watch for dynamic
property change events on visual properties, and update the GUI by uninstalling
and reinstalling the UI delegates in order for the components to have the most
up-to-date visual property values. This dynamic behavior will automatically
occur for all Swing programs running the Windows look and feel.

</p><p>This mechanism will update GUI components by traversing the GUI hierarchy
(starting with <code>Frame.getFrames()</code> and traversing all
windows/containers/components from there). If a client has any
undisplayable components when this occurs (see the <code>isDisplayable()</code>
method on
<a href="http://download.oracle.com/javase/1.4.2/docs/api/java/awt/Component.html">java.awt.Component</a>
for a definition of when a component is displayable), those components will not
update automatically and it will be the client program's responsibility to
update the UI on those components to ensure their Look and Feel is up-to-date.
For example, this occurs in the SwingSet2 demo because demo panels are created
but not added to the GUI heirarchy until they are selected from the demo's
tabbedpane. Therefore, before the newly selected demo panel is added to the
hierarchy, its UI is updated to ensure it has the most current property
settings:

</p><pre>    fragment from SwingSet2.java:  // Ensure panel's UI is current before making visible
    JComponent currentDemoPanel = demo.getDemoPanel();
    <b>SwingUtilities.updateComponentTreeUI(currentDemoPanel);</b>
    // Replace current demo with newly selected demo
    demoPanel.removeAll();
    demoPanel.add(currentDemoPanel, BorderLayout.CENTER);
</pre>

<!-- Start SiteCatalyst code   -->
<script language="JavaScript" src="./Windows Desktop Property Support_files/s_code_download.js"></script>
<script language="JavaScript" src="./Windows Desktop Property Support_files/s_code.js"></script>
 
<!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->
<!--  Below code will send the info to Omniture server -->
<script language="javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>
 
<!-- End SiteCatalyst code -->


</body></html>